package modules.${nomeDoModulo}.actions#if($nomeDoSubmodulo).$nomeDoSubmodulo#end;

import modules.admin.services.LogServices;
import modules.admin.enums.LogType;
import modules.sistema.actions.core.SistemaAC;
import modules.${nomeDoModulo}.beans#if($nomeDoSubmodulo).$nomeDoSubmodulo#end.${nomeDoBean};
import modules.${nomeDoModulo}.dao#if($nomeDoSubmodulo).$nomeDoSubmodulo#end.${nomeDoBean}Dao;
#foreach($att in $atributoList)
#if(${att.createSelect})
import modules.${nomeDoModulo}.dao#if($nomeDoSubmodulo).$nomeDoSubmodulo#end.${att.tipo}Dao;
#end
#end
import modules.${nomeDoModulo}.validators#if($nomeDoSubmodulo).$nomeDoSubmodulo#end.${nomeDoBean}Validator;
import org.futurepages.actions.ProtectedCrudActions;
import org.futurepages.annotations.AsynchronousAction;
import org.futurepages.annotations.Transactional;
import org.futurepages.core.pagination.PaginationSlice;
import org.futurepages.core.persistence.Dao;
import org.futurepages.enums.AsynchronousActionType;

#foreach($att in $atributoList)
#if(${att.createSelect})
import java.util.List;
	#break
#end
#end


/**
*
* @author
*/
public class ${nomeDoBean}Actions extends ProtectedCrudActions {

	private final int PAGE_SIZE = 50;
	private ${nomeDoBean} ${nomeDaVariavelDoBean};

	@Transactional
	@AsynchronousAction(AsynchronousActionType.AJAX)
	public String create() {
		validate(${nomeDoBean}Validator.class, false).validateCreate(${nomeDaVariavelDoBean});
		Dao.save(${nomeDaVariavelDoBean});
		LogServices.saveLog(${nomeDaVariavelDoBean}, LogType.CREATE, SistemaAC.loggedUser(this), getIpsFromClient());
		return redir("/${nomeDoModulo}#if($nomeDoSubmodulo)/$nomeDoSubmodulo#end/${nomeDoBean}?type=explore");
	}

	@Transactional
	@AsynchronousAction(AsynchronousActionType.AJAX)
	public String update() throws Exception {
		#set($beanInput = ${nomeDaVariavelDoBean}+"Input")
		#set($beanOutput = ${nomeDaVariavelDoBean}+"Output")
		${nomeDoBean} $beanInput = ${nomeDaVariavelDoBean};
		validate(${nomeDoBean}Validator.class, false).validateUpdate(${nomeDaVariavelDoBean}Input);
		${nomeDoBean} $beanOutput = ${nomeDoBean}Dao.getBy${atributoChaveCapitalized}(${nomeDaVariavelDoBean}.get${atributoChaveCapitalized}());
		${beanOutput}.fillFromForm($beanInput);
		Dao.update(${beanOutput});
		LogServices.saveLog(${nomeDaVariavelDoBean}, LogType.UPDATE, SistemaAC.loggedUser(this), getIpsFromClient());
		return redir("/${nomeDoModulo}#if($nomeDoSubmodulo)/$nomeDoSubmodulo#end/${nomeDoBean}?type=explore");
	}

	public String explore() {
		#foreach($att in $atributoList)
			#if(${att.createSelect})
		String ${att.nome}Id = input.getStringValue("${att.nome}");
			#end
		#end
		filtra${nomeDoBean}(input.getStringValue("conteudoBusca")#foreach($att in $atributoList)#if(${att.createSelect}), ${att.nome}Id#end#end);
		return SUCCESS;
	}

	protected void listObjects(){
		filtra${nomeDoBean}(null#foreach($att in $atributoList)#if(${att.createSelect}), null#end#end);
	}

	@Override
	protected void restoreObject() {
		this.${nomeDaVariavelDoBean} = ${nomeDoBean}Dao.getBy${atributoChaveCapitalized}(input.get${atributoChaveTipoCapitalized}Value("${atributoChave}"));
		output.setValue("${nomeDaVariavelDoBean}", ${nomeDaVariavelDoBean});
	}

	@Override
	public void listDependencies() {
	#foreach($att in $atributoList)
		#if(${att.createSelect})
	    List ${att.nome}List = ${att.tipo}Dao.listAll();
	    output.setValue("${att.nome}List", ${att.nome}List);
		#end
	#end
	}

	protected void filtra${nomeDoBean}(String conteudoBusca#foreach($att in $atributoList)#if(${att.createSelect}), String ${att.nome}Id#end#end) {
		PaginationSlice<${nomeDoBean}> pagList${nomeDoBean} = ${nomeDoBean}Dao.paginateList(getPageNum(), getPageSize(PAGE_SIZE), conteudoBusca#foreach($att in $atributoList)#if(${att.createSelect}), ${att.nome}Id#end#end);
		setOutputPaginationSlice("pagList${nomeDoBean}", pagList${nomeDoBean});
		output.setValue("conteudoBusca", conteudoBusca);
	#foreach($att in $atributoList)
		#if(${att.createSelect})
	    listDependencies();
			#break
		#end
	#end
	}

	/*
	* MOVER PARA O BEAN
	*/
	//Aqui Ã© setado tudo que vem da tela, de forma a passar pelo "set" da entidade
	public void fillFromForm(${nomeDoBean} $beanInput) {
	#foreach($att in $atributoList)
		#if($atributoChave != $att.nome)
	    this.set${att.nomeCapitalized}(${beanInput}#if(${att.tipo} == "boolean").is#else.get#end${att.nomeCapitalized}());
		#end
	#end
	}
}