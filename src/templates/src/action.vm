package modules.${nomeDoModulo}.actions#if($nomeDoSubmodulo).$nomeDoSubmodulo#end;

import org.futurepages.util.StringUtils;
import modules.admin.services.LogServices;
import modules.admin.enums.LogType;
import modules.sistema.actions.core.SistemaAC;
import modules.${nomeDoModulo}.beans#if($nomeDoSubmodulo).$nomeDoSubmodulo#end.${nomeDoBean};
import modules.${nomeDoModulo}.dao#if($nomeDoSubmodulo).$nomeDoSubmodulo#end.${nomeDoBean}Dao;
import modules.${nomeDoModulo}.validators#if($nomeDoSubmodulo).$nomeDoSubmodulo#end.${nomeDoBean}Validator;
import org.futurepages.actions.ProtectedCrudActions;
import org.futurepages.annotations.AsynchronousAction;
import org.futurepages.annotations.Transactional;
import org.futurepages.core.pagination.PaginationSlice;
import org.futurepages.core.persistence.Dao;
import org.futurepages.enums.AsynchronousActionType;


/**
*
* @author
*/
public class ${nomeDoBean}Actions extends ProtectedCrudActions {

private final int PAGE_SIZE = 50;
private ${nomeDoBean} ${nomeDaVariavelDoBean};

private void loadSelects(){

}

@Transactional
@AsynchronousAction(AsynchronousActionType.AJAX)
public String create() {
validate(${nomeDoBean}Validator.class, false).validateCreate(${nomeDaVariavelDoBean});
Dao.save(${nomeDaVariavelDoBean});
LogServices.saveLog(${nomeDaVariavelDoBean}, LogType.CREATE, SistemaAC.loggedUser(this), getIpsFromClient());
return redir("/${nomeDoModulo}/${nomeDoBean}?type=explore");
}

@Transactional
@AsynchronousAction(AsynchronousActionType.AJAX)
public String update() throws Exception {
#set($beanInput = ${nomeDaVariavelDoBean}+"Input")
#set($beanOutput = ${nomeDaVariavelDoBean}+"Output")
${nomeDoBean} $beanInput = ${nomeDaVariavelDoBean};
validate(${nomeDoBean}Validator.class, false).validateUpdate(${nomeDaVariavelDoBean}Input);
${nomeDoBean} $beanOutput = ${nomeDoBean}Dao.getBy${atributoChaveCapitalized}(${nomeDaVariavelDoBean}.get${atributoChaveCapitalized}());
${beanOutput}.fillFromForm($beanInput);
Dao.update(${beanOutput});
LogServices.saveLog(${nomeDaVariavelDoBean}, LogType.UPDATE, SistemaAC.loggedUser(this), getIpsFromClient());
return redir("/${nomeDoModulo}/${nomeDoBean}?type=explore");
}

@Override
protected void restoreObject() {
this.${nomeDaVariavelDoBean} = ${nomeDoBean}Dao.getBy${atributoChaveCapitalized}(input.get${atributoChaveTipoCapitalized}Value("${atributoChave}"));
output.setValue("${nomeDaVariavelDoBean}", ${nomeDaVariavelDoBean});
}

@Override
public void listDependencies() {
}

protected void listObjects(){
filtra${nomeDoBean}(null);
}

public String explore() {
filtra${nomeDoBean}(input.getStringValue("conteudoBusca"));
return SUCCESS;
}

protected void filtra${nomeDoBean}(String conteudoBusca) {
PaginationSlice<${nomeDoBean}> pagList${nomeDoBean} = ${nomeDoBean}Dao.paginateList(getPageNum(), getPageSize(PAGE_SIZE), conteudoBusca);
setOutputPaginationSlice("pagList${nomeDoBean}", pagList${nomeDoBean});
output.setValue("conteudoBusca", conteudoBusca);
}



/*
* MOVER PARA O BEAN
*/
//Aqui Ã© setado tudo que vem da tela.
public void fillFromForm(${nomeDoBean} $beanInput) {
#foreach($att in $atributoList)
	#if($atributoChave != $att.nome)
    this.set${att.nomeCapitalized}(${beanInput}.get${att.nomeCapitalized}());
	#end
#end
}
}
